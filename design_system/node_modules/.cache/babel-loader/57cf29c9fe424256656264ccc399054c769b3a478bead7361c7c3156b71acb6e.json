{"ast":null,"code":"var _jsxFileName = \"/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx\";\n// import React, { useState } from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { rows } from './MockData';\n\n// export default function PresentationLayer() {\n//   const [isLoading, setLoading] = useState(false);\n\n//   const handleSearch = () => {\n//     setLoading(true); \n\n//     // Simulate loading for 1 second\n//     setTimeout(() => {\n//       const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n//       const shopResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//           typeof value === 'string' && value.toLowerCase().includes(shopSearch)\n//         )\n//       );\n\n//       const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n//       const inventoryResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//           typeof value === 'string' && value.toLowerCase().includes(inventorySearch)\n//         )\n//       );\n\n//       if (shopResults.length > 0 && inventoryResults.length > 0) {\n//         console.log('Successful');\n//       } else {\n//         console.log('Not found');\n//       }\n\n//       setLoading(false); // Set loading state to false after search is complete\n//     }, 1000);\n//   }\n\n//   return (\n//     <Box sx={{ padding: '20px' }}>\n//       <Box sx={{ display: 'flex', padding: '10px' }}>\n//         <TextField\n//           id=\"searchShop\"\n//           label=\"Search for shop\"\n//           fullWidth\n//         ></TextField>\n//         <TextField\n//           id=\"searchInventory\"\n//           label=\"Select for inventory\"\n//           fullWidth\n//           sx={{ marginLeft: '10px' }}\n//         ></TextField>\n//       </Box>\n\n//       <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>\n//         <button onClick={handleSearch} style={{ padding: '10px 20px', borderRadius: '7px' }}>\n//           {isLoading ? 'Loading...' : 'Search'}\n//         </button>\n//       </Box>\n\n//       <Box sx={{ marginTop: '30px', textAlign: 'center' }}>\n//         {isLoading && <p>Loading...</p>}\n//       </Box>\n\n//       <Box sx={{ marginTop: '30px' }}>\n//         <DataGrid\n//           rows={rows}\n//           columns={[\n//             { field: 'id', headerName: 'ID', width: 500 },\n//             { field: 'shop', headerName: 'Shop', width: 500 },\n//             { field: 'inventory', headerName: 'Inventory', width: 500 },\n//             { field: 'products', headerName: 'Products', width: 500 }\n//           ]}\n//           checkboxSelection\n//         ></DataGrid>\n//       </Box>\n//     </Box>\n//   );\n// }\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PresentationLayer() {\n  let isLoading = false;\n  const handleSearch = () => {\n    var _document$getElementB2;\n    isLoading = true; // Set isLoading to true when search is initiated\n\n    setTimeout(() => {\n      var _document$getElementB;\n      const shopSearch = document.getElementById('searchShop').value.toLowerCase();\n      const shopResults = rows.filter(row => Object.values(row).some(value => typeof value === 'string' && value.toLowerCase().includes(shopSearch)));\n      const inventorySearch = document.getElementById('searchInventory').value.toLowerCase();\n      const inventoryResults = rows.filter(row => Object.values(row).some(value => typeof value === 'string' && value.toLowerCase().includes(inventorySearch)));\n      if (shopResults.length > 0 && inventoryResults.length > 0) {\n        console.log('Successful');\n      } else {\n        console.log('Not found');\n      }\n      isLoading = false; // Set isLoading to false after search is complete\n      (_document$getElementB = document.getElementById('loader')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.remove('show'); // Hide loader after search is complete\n    }, 1000);\n    (_document$getElementB2 = document.getElementById('loader')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.classList.add('show'); // Show loader when search is initiated\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchShop\",\n        label: \"Search for shop\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchInventory\",\n        label: \"Select for inventory\",\n        fullWidth: true,\n        sx: {\n          marginLeft: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '30px',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        style: {\n          padding: '10px 20px',\n          borderRadius: '7px'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: [{\n          field: 'id',\n          headerName: 'ID',\n          width: 500\n        }, {\n          field: 'shop',\n          headerName: 'Shop',\n          width: 500\n        }, {\n          field: 'inventory',\n          headerName: 'Inventory',\n          width: 500\n        }, {\n          field: 'products',\n          headerName: 'Products',\n          width: 500\n        }],\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_c = PresentationLayer;\nvar _c;\n$RefreshReg$(_c, \"PresentationLayer\");","map":{"version":3,"names":["React","Box","TextField","DataGrid","rows","jsxDEV","_jsxDEV","PresentationLayer","isLoading","handleSearch","_document$getElementB2","setTimeout","_document$getElementB","shopSearch","document","getElementById","value","toLowerCase","shopResults","filter","row","Object","values","some","includes","inventorySearch","inventoryResults","length","console","log","classList","remove","add","sx","padding","children","display","id","label","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","justifyContent","marginTop","position","onClick","style","borderRadius","className","columns","field","headerName","width","checkboxSelection","_c","$RefreshReg$"],"sources":["/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { rows } from './MockData';\n\n// export default function PresentationLayer() {\n//   const [isLoading, setLoading] = useState(false);\n\n//   const handleSearch = () => {\n//     setLoading(true); \n\n//     // Simulate loading for 1 second\n//     setTimeout(() => {\n//       const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n//       const shopResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//           typeof value === 'string' && value.toLowerCase().includes(shopSearch)\n//         )\n//       );\n\n//       const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n//       const inventoryResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//           typeof value === 'string' && value.toLowerCase().includes(inventorySearch)\n//         )\n//       );\n\n//       if (shopResults.length > 0 && inventoryResults.length > 0) {\n//         console.log('Successful');\n//       } else {\n//         console.log('Not found');\n//       }\n\n//       setLoading(false); // Set loading state to false after search is complete\n//     }, 1000);\n//   }\n\n//   return (\n//     <Box sx={{ padding: '20px' }}>\n//       <Box sx={{ display: 'flex', padding: '10px' }}>\n//         <TextField\n//           id=\"searchShop\"\n//           label=\"Search for shop\"\n//           fullWidth\n//         ></TextField>\n//         <TextField\n//           id=\"searchInventory\"\n//           label=\"Select for inventory\"\n//           fullWidth\n//           sx={{ marginLeft: '10px' }}\n//         ></TextField>\n//       </Box>\n\n//       <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>\n//         <button onClick={handleSearch} style={{ padding: '10px 20px', borderRadius: '7px' }}>\n//           {isLoading ? 'Loading...' : 'Search'}\n//         </button>\n//       </Box>\n\n//       <Box sx={{ marginTop: '30px', textAlign: 'center' }}>\n//         {isLoading && <p>Loading...</p>}\n//       </Box>\n\n//       <Box sx={{ marginTop: '30px' }}>\n//         <DataGrid\n//           rows={rows}\n//           columns={[\n//             { field: 'id', headerName: 'ID', width: 500 },\n//             { field: 'shop', headerName: 'Shop', width: 500 },\n//             { field: 'inventory', headerName: 'Inventory', width: 500 },\n//             { field: 'products', headerName: 'Products', width: 500 }\n//           ]}\n//           checkboxSelection\n//         ></DataGrid>\n//       </Box>\n//     </Box>\n//   );\n// }\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\n\nexport default function PresentationLayer() {\n  let isLoading = false;\n\n  const handleSearch = () => {\n    isLoading = true; // Set isLoading to true when search is initiated\n\n    setTimeout(() => {\n      const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n      const shopResults = rows.filter(row =>\n        Object.values(row).some(value =>\n          typeof value === 'string' && value.toLowerCase().includes(shopSearch)\n        )\n      );\n\n      const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n      const inventoryResults = rows.filter(row =>\n        Object.values(row).some(value =>\n          typeof value === 'string' && value.toLowerCase().includes(inventorySearch)\n        )\n      );\n\n      if (shopResults.length > 0 && inventoryResults.length > 0) {\n        console.log('Successful');\n      } else {\n        console.log('Not found');\n      }\n\n      isLoading = false; // Set isLoading to false after search is complete\n      document.getElementById('loader')?.classList.remove('show'); // Hide loader after search is complete\n    }, 1000);\n\n    document.getElementById('loader')?.classList.add('show'); // Show loader when search is initiated\n  }\n\n  return (\n    <Box sx={{ padding: '20px' }}>\n      <Box sx={{ display: 'flex', padding: '10px' }}>\n        <TextField\n          id=\"searchShop\"\n          label=\"Search for shop\"\n          fullWidth\n        ></TextField>\n        <TextField\n          id=\"searchInventory\"\n          label=\"Select for inventory\"\n          fullWidth\n          sx={{ marginLeft: '10px' }}\n        ></TextField>\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: '30px', position: 'relative' }}>\n        <button onClick={handleSearch} style={{ padding: '10px 20px', borderRadius: '7px' }}>\n          Search\n        </button>\n        <div id=\"loader\" className=\"loader\"></div> {/* Loader element */}\n      </Box>\n\n      <Box sx={{ marginTop: '30px' }}>\n        <DataGrid\n          rows={rows}\n          columns={[\n            { field: 'id', headerName: 'ID', width: 500 },\n            { field: 'shop', headerName: 'Shop', width: 500 },\n            { field: 'inventory', headerName: 'Inventory', width: 500 },\n            { field: 'products', headerName: 'Products', width: 500 }\n          ]}\n          checkboxSelection\n        ></DataGrid>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}