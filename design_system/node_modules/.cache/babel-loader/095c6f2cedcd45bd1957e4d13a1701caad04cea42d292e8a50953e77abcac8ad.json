{"ast":null,"code":"var _jsxFileName = \"/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ProductsPage.tsx\";\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\nimport { productsPageMockData } from '../MockData/ProductsPage';\nimport backgroundImage from './background.avif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductsPage() {\n  // Define columns for the DataGrid\n  const columns = [{\n    field: 'sno',\n    headerName: 'S.No',\n    width: 100,\n    align: 'center'\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 200\n  }, {\n    field: 'quantity',\n    headerName: 'Quantity',\n    width: 150,\n    align: 'center'\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 150,\n    align: 'center'\n  }];\n\n  // Format product data for the DataGrid\n  const formatDataForGrid = () => {\n    return productsPageMockData.tables[0].products.map(product => ({\n      id: product.sno,\n      sno: product.sno,\n      name: product.name,\n      quantity: product.quantity,\n      price: product.price\n    }));\n  };\n\n  // Styles\n  const wholeContainer = {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minWidth: '800px',\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    backgroundColor: 'red'\n  };\n  const searchButton = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '20vh'\n  };\n  const ShopInvName = {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    flex: 1\n  };\n  const ShopName = {\n    backgroundColor: 'yellow',\n    textAlign: 'center'\n  };\n  const InventoryName = {\n    backgroundColor: 'blue',\n    textAlign: 'center'\n  };\n  const body = {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '10px',\n    alignItems: 'center',\n    backgroundColor: 'green',\n    flex: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: wholeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: ShopInvName,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: ShopName,\n        children: \"SHOP NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: InventoryName,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"INVENTORY NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '50%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: formatDataForGrid(),\n          columns: columns,\n          columnBuffer: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: searchButton,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["React","Box","DataGrid","Button","productsPageMockData","backgroundImage","jsxDEV","_jsxDEV","ProductsPage","columns","field","headerName","width","align","formatDataForGrid","tables","products","map","product","id","sno","name","quantity","price","wholeContainer","display","flexDirection","overflow","minWidth","backgroundSize","backgroundPosition","minHeight","backgroundColor","searchButton","alignItems","justifyContent","ShopInvName","flex","ShopName","textAlign","InventoryName","body","padding","sx","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","rows","columnBuffer","variant","_c","$RefreshReg$"],"sources":["/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ProductsPage.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport { Button, MenuItem } from '@mui/material';\nimport { productsPageMockData } from '../MockData/ProductsPage';\nimport backgroundImage from './background.avif';\n\nexport default function ProductsPage() {\n\n  // Define columns for the DataGrid\n  const columns: GridColDef[] = [\n    { field: 'sno', headerName: 'S.No', width: 100, align: 'center' },\n    { field: 'name', headerName: 'Name', width: 200 },\n    { field: 'quantity', headerName: 'Quantity', width: 150, align: 'center' },\n    { field: 'price', headerName: 'Price', width: 150, align: 'center' },\n  ];\n\n  // Format product data for the DataGrid\n  const formatDataForGrid = () => {\n    return productsPageMockData.tables[0].products.map((product) => ({\n      id: product.sno,\n      sno: product.sno,\n      name: product.name,\n      quantity: product.quantity,\n      price: product.price,\n    }));\n  }\n\n  // Styles\n  const wholeContainer = {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    minWidth: '800px',\n    backgroundImage: `url(${backgroundImage})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    backgroundColor: 'red',\n  };\n\n  const searchButton = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '20vh',\n  };\n\n  const ShopInvName = {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    flex: 1,\n  };\n\n  const ShopName = {\n    backgroundColor: 'yellow',\n    textAlign: 'center',\n  };\n\n  const InventoryName = {\n    backgroundColor: 'blue',\n    textAlign: 'center',\n  };\n\n  const body = {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '10px',\n    alignItems: 'center',\n    backgroundColor: 'green',\n    flex: 1,\n  };\n\n  return (\n    <Box sx={wholeContainer}>\n      <Box sx={ShopInvName}>\n        <Box sx={ShopName}>SHOP NAME</Box>\n        <Box sx={InventoryName}><label>INVENTORY NAME</label></Box>\n      </Box>\n      <Box sx={body}>\n        <div style={{ height: 400, width: '50%' }}>\n          <DataGrid\n            rows={formatDataForGrid()}\n            columns={columns}\n            columnBuffer={8}\n          />\n        </div>\n      </Box>\n      <Box sx={searchButton}>\n        <Button variant=\"contained\">SUBMIT</Button>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}