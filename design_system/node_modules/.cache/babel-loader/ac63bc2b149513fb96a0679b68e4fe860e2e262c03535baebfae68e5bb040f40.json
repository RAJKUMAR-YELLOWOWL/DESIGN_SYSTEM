{"ast":null,"code":"var _jsxFileName = \"/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PresentationLayer() {\n  _s();\n  // Define a boolean variable to track whether the loader should be shown\n  let isLoading = false;\n\n  // Handler function for the submit button click\n  const handleSubmit = () => {\n    // Set isLoading to true to show the loader\n    isLoading = true;\n    // Force re-render by updating the component's state\n    forceUpdate();\n\n    // Simulate a delay of 1 second before hiding the loader\n    setTimeout(() => {\n      isLoading = false;\n      // Force re-render by updating the component's state\n      forceUpdate();\n    }, 1000);\n  };\n\n  // Function to force re-render\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchShop\",\n        label: \"Search for shop\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchInventory\",\n        label: \"Select for inventory\",\n        fullWidth: true,\n        sx: {\n          marginLeft: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '10px 20px',\n          borderRadius: '7px'\n        },\n        onClick: handleSubmit // Call handleSubmit function on button click\n        ,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      style: {\n        marginTop: '30px',\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: [{\n          field: 'id',\n          headerName: 'ID',\n          width: 500\n        }, {\n          field: 'shop',\n          headerName: 'Shop',\n          width: 500\n        }, {\n          field: 'inventory',\n          headerName: 'Inventory',\n          width: 500\n        }, {\n          field: 'products',\n          headerName: 'Products',\n          width: 500\n        }],\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationLayer, \"X5rEjsBNP/fh1FQA6Gy+z8f0U8w=\");\n_c = PresentationLayer;\nvar _c;\n$RefreshReg$(_c, \"PresentationLayer\");","map":{"version":3,"names":["React","Box","TextField","DataGrid","rows","jsxDEV","_jsxDEV","PresentationLayer","_s","isLoading","handleSubmit","forceUpdate","setTimeout","updateState","useState","useCallback","sx","padding","children","display","id","label","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","justifyContent","marginTop","style","borderRadius","onClick","className","textAlign","columns","field","headerName","width","checkboxSelection","_c","$RefreshReg$"],"sources":["/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\n\nexport default function PresentationLayer() {\n  // Define a boolean variable to track whether the loader should be shown\n  let isLoading = false;\n\n  // Handler function for the submit button click\n  const handleSubmit = () => {\n    // Set isLoading to true to show the loader\n    isLoading = true;\n    // Force re-render by updating the component's state\n    forceUpdate();\n\n    // Simulate a delay of 1 second before hiding the loader\n    setTimeout(() => {\n      isLoading = false;\n      // Force re-render by updating the component's state\n      forceUpdate();\n    }, 1000);\n  };\n\n  // Function to force re-render\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  return (\n    <Box sx={{ padding: '20px' }}>\n      <Box sx={{ display: 'flex', padding: '10px' }}>\n        <TextField\n          id=\"searchShop\"\n          label=\"Search for shop\"\n          fullWidth\n        ></TextField>\n        <TextField\n          id=\"searchInventory\"\n          label=\"Select for inventory\"\n          fullWidth\n          sx={{ marginLeft: '10px' }}\n        ></TextField>\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>\n        <button\n          style={{ padding: '10px 20px', borderRadius: '7px' }}\n          onClick={handleSubmit} // Call handleSubmit function on button click\n        >\n          Search\n        </button>\n      </Box>\n\n      {/* Conditional rendering of loader based on isLoading value */}\n      {isLoading && (\n        <div className=\"loader\" style={{ marginTop: '30px', textAlign: 'center' }}>\n          Loading...\n        </div>\n      )}\n\n      <Box sx={{ marginTop: '30px' }}>\n        <DataGrid\n          rows={rows}\n          columns={[\n            { field: 'id', headerName: 'ID', width: 500 },\n            { field: 'shop', headerName: 'Shop', width: 500 },\n            { field: 'inventory', headerName: 'Inventory', width: 500 },\n            { field: 'products', headerName: 'Products', width: 500 }\n          ]}\n          checkboxSelection\n        ></DataGrid>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}