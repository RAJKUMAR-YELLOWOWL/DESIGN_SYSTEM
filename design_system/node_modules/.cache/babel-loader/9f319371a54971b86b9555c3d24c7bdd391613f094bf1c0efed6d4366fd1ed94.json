{"ast":null,"code":"var _jsxFileName = \"/home/raj/RAJ/SOFTWORTH/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx\";\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import MenuItem from '@mui/material/MenuItem';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { CircularProgress } from '@mui/material'; // Import CircularProgress for loader\n// import { rows } from './MockData';\n// import Axios from 'axios';\n\n// type Row = {\n//   id: number;\n//   shop: string;\n//   inventory: string;\n//   product: string;\n// };\n\n// export default function ShopsPage() {\n\n//   const postShops = async () => {\n//     try{\n//       const response = await Axios.post('http://localhost:3000/addshop',{\n//         shopId: '12345678',\n//         shopName: 'shopName',\n//         shopLocation: 'udumalpet'\n//       });\n\n//       console.log('Response : ', response.data)\n//     }\n//     catch(error){\n//       console.error('Error : ', error)\n//     }\n//   }\n\n//   const [searchText, setSearchText] = React.useState('');\n//   const [shopFilter, setShopFilter] = React.useState('');\n//   const [inventoryFilter, setInventoryFilter] = React.useState('');\n//   const [loading, setLoading] = React.useState(false); \n\n//   const shops = [...new Set((rows as Row[]).map(row => row.shop))];\n//   const inventories = [...new Set((rows as Row[]).map(row => row.inventory))];\n\n//   const handleSearch = (value: string) => {\n//     setSearchText(value);\n//     setLoading(true); \n//     setTimeout(() => {\n//       setLoading(false); \n//     }, 1000);\n//   };\n\n//   const filteredRows = React.useMemo(() => {\n//     return rows.filter(row => {\n//       const shopMatch = shopFilter === '' || row.shop.toLowerCase().includes(shopFilter.toLowerCase());\n//       const inventoryMatch = inventoryFilter === '' || row.inventory.toLowerCase().includes(inventoryFilter.toLowerCase());\n//       const searchMatch = searchText === '' || Object.values(row).some(value => value.toString().toLowerCase().includes(searchText.toLowerCase()));\n//       return shopMatch && inventoryMatch && searchMatch;\n//     });\n//   }, [shopFilter, inventoryFilter, searchText]);\n\n//   return (\n//     <Box sx={{ height: '100%', width: '98%', padding: '20px' }}>\n//       <TextField\n//         label=\"Search\"\n//         value={searchText}\n//         onChange={(e) => handleSearch(e.target.value)}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n//         <TextField\n//           select\n//           label=\"Search for shops\"\n//           value={shopFilter}\n//           onChange={(e) => setShopFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {shops.map((shop, index) => (\n//             <MenuItem key={index} value={shop}>{shop}</MenuItem>\n//           ))}\n//         </TextField>\n//         <TextField\n//           select\n//           label=\"Search for inventory\"\n//           value={inventoryFilter}\n//           onChange={(e) => setInventoryFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {inventories.map((inventory, index) => (\n//             <MenuItem key={index} value={inventory}>{inventory}</MenuItem>\n//           ))}\n//         </TextField>\n//       </Box>\n//       {loading ? (\n//         <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 'calc(100% - 104px)' }}>\n//           <CircularProgress /> \n//         </Box>\n//       ) : (\n//         filteredRows.length === 0 ? (\n//           <p>Data not found</p>\n//         ) : (\n//           <Box sx={{ height: 'calc(100% - 104px)', width: '100%' }}>\n//             <DataGrid\n//               rows={filteredRows}\n//               columns={[\n//                 { field: 'id', headerName: 'ID', width: 90 },\n//                 { field: 'shop', headerName: 'Shop', width: 150 },\n//                 { field: 'inventory', headerName: 'Inventory', width: 150 },\n//                 { field: 'products', headerName: 'Products', width: 100 }\n//               ]}\n//               checkboxSelection\n//             />\n//           </Box>\n//         )\n//       )}\n//     </Box>\n//   );\n// }\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = [{\n  id: 1,\n  shop: 'Shop A',\n  inventory: 'Grocery',\n  products: 'product1'\n}, {\n  id: 2,\n  shop: 'Shop A',\n  inventory: 'Electronics',\n  products: 'product2'\n}, {\n  id: 3,\n  shop: 'Shop B',\n  inventory: 'Grocery',\n  products: 'product3'\n}, {\n  id: 4,\n  shop: 'Shop B',\n  inventory: 'Electronics',\n  products: 'product4'\n}];\nexport default function ShopsPage() {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 'calc(100vh - 64px)',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: [{\n        field: 'id',\n        headerName: 'ID',\n        width: 90\n      }, {\n        field: 'shop',\n        headerName: 'Shop',\n        width: 150\n      }, {\n        field: 'inventory',\n        headerName: 'Inventory',\n        width: 150\n      }, {\n        field: 'products',\n        headerName: 'Products',\n        width: 150\n      }],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_c = ShopsPage;\nvar _c;\n$RefreshReg$(_c, \"ShopsPage\");","map":{"version":3,"names":["React","Box","DataGrid","jsxDEV","_jsxDEV","rows","id","shop","inventory","products","ShopsPage","sx","height","width","children","columns","field","headerName","checkboxSelection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raj/RAJ/SOFTWORTH/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx"],"sourcesContent":["// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import MenuItem from '@mui/material/MenuItem';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { CircularProgress } from '@mui/material'; // Import CircularProgress for loader\n// import { rows } from './MockData';\n// import Axios from 'axios';\n\n// type Row = {\n//   id: number;\n//   shop: string;\n//   inventory: string;\n//   product: string;\n// };\n\n// export default function ShopsPage() {\n\n//   const postShops = async () => {\n//     try{\n//       const response = await Axios.post('http://localhost:3000/addshop',{\n//         shopId: '12345678',\n//         shopName: 'shopName',\n//         shopLocation: 'udumalpet'\n//       });\n\n//       console.log('Response : ', response.data)\n//     }\n//     catch(error){\n//       console.error('Error : ', error)\n//     }\n//   }\n\n//   const [searchText, setSearchText] = React.useState('');\n//   const [shopFilter, setShopFilter] = React.useState('');\n//   const [inventoryFilter, setInventoryFilter] = React.useState('');\n//   const [loading, setLoading] = React.useState(false); \n\n//   const shops = [...new Set((rows as Row[]).map(row => row.shop))];\n//   const inventories = [...new Set((rows as Row[]).map(row => row.inventory))];\n\n//   const handleSearch = (value: string) => {\n//     setSearchText(value);\n//     setLoading(true); \n//     setTimeout(() => {\n//       setLoading(false); \n//     }, 1000);\n//   };\n\n//   const filteredRows = React.useMemo(() => {\n//     return rows.filter(row => {\n//       const shopMatch = shopFilter === '' || row.shop.toLowerCase().includes(shopFilter.toLowerCase());\n//       const inventoryMatch = inventoryFilter === '' || row.inventory.toLowerCase().includes(inventoryFilter.toLowerCase());\n//       const searchMatch = searchText === '' || Object.values(row).some(value => value.toString().toLowerCase().includes(searchText.toLowerCase()));\n//       return shopMatch && inventoryMatch && searchMatch;\n//     });\n//   }, [shopFilter, inventoryFilter, searchText]);\n\n//   return (\n//     <Box sx={{ height: '100%', width: '98%', padding: '20px' }}>\n//       <TextField\n//         label=\"Search\"\n//         value={searchText}\n//         onChange={(e) => handleSearch(e.target.value)}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n//         <TextField\n//           select\n//           label=\"Search for shops\"\n//           value={shopFilter}\n//           onChange={(e) => setShopFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {shops.map((shop, index) => (\n//             <MenuItem key={index} value={shop}>{shop}</MenuItem>\n//           ))}\n//         </TextField>\n//         <TextField\n//           select\n//           label=\"Search for inventory\"\n//           value={inventoryFilter}\n//           onChange={(e) => setInventoryFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {inventories.map((inventory, index) => (\n//             <MenuItem key={index} value={inventory}>{inventory}</MenuItem>\n//           ))}\n//         </TextField>\n//       </Box>\n//       {loading ? (\n//         <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 'calc(100% - 104px)' }}>\n//           <CircularProgress /> \n//         </Box>\n//       ) : (\n//         filteredRows.length === 0 ? (\n//           <p>Data not found</p>\n//         ) : (\n//           <Box sx={{ height: 'calc(100% - 104px)', width: '100%' }}>\n//             <DataGrid\n//               rows={filteredRows}\n//               columns={[\n//                 { field: 'id', headerName: 'ID', width: 90 },\n//                 { field: 'shop', headerName: 'Shop', width: 150 },\n//                 { field: 'inventory', headerName: 'Inventory', width: 150 },\n//                 { field: 'products', headerName: 'Products', width: 100 }\n//               ]}\n//               checkboxSelection\n//             />\n//           </Box>\n//         )\n//       )}\n//     </Box>\n//   );\n// }\n\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst rows = [\n  { id: 1, shop: 'Shop A', inventory: 'Grocery', products: 'product1' },\n  { id: 2, shop: 'Shop A', inventory: 'Electronics', products: 'product2' },\n  { id: 3, shop: 'Shop B', inventory: 'Grocery', products: 'product3' },\n  { id: 4, shop: 'Shop B', inventory: 'Electronics', products: 'product4' }\n];\n\nexport default function ShopsPage() {\n  return (\n    <Box sx={{ height: 'calc(100vh - 64px)', width: '100%' }}>\n       {/* <TextField\n//         label=\"Search\"\n//         value={searchText}\n//         onChange={(e) => handleSearch(e.target.value)}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n//         <TextField\n//           select\n//           label=\"Search for shops\"\n//           value={shopFilter}\n//           onChange={(e) => setShopFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {shops.map((shop, index) => (\n//             <MenuItem key={index} value={shop}>{shop}</MenuItem>\n//           ))}\n//         </TextField>\n//         <TextField\n//           select\n//           label=\"Search for inventory\"\n//           value={inventoryFilter}\n//           onChange={(e) => setInventoryFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {inventories.map((inventory, index) => (\n//             <MenuItem key={index} value={inventory}>{inventory}</MenuItem>\n//           ))}\n//         </TextField> */}\n      <DataGrid\n        rows={rows}\n        columns={[\n          { field: 'id', headerName: 'ID', width: 90 },\n          { field: 'shop', headerName: 'Shop', width: 150 },\n          { field: 'inventory', headerName: 'Inventory', width: 150 },\n          { field: 'products', headerName: 'Products', width: 150 }\n        ]}\n        checkboxSelection\n      />\n    </Box>\n  );\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAG,CACX;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAE,SAAS;EAAEC,QAAQ,EAAE;AAAW,CAAC,EACrE;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAE,aAAa;EAAEC,QAAQ,EAAE;AAAW,CAAC,EACzE;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAE,SAAS;EAAEC,QAAQ,EAAE;AAAW,CAAC,EACrE;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAE,aAAa;EAAEC,QAAQ,EAAE;AAAW,CAAC,CAC1E;AAED,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,oBACEN,OAAA,CAACH,GAAG;IAACU,EAAE,EAAE;MAAEC,MAAM,EAAE,oBAAoB;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eA8BvDV,OAAA,CAACF,QAAQ;MACPG,IAAI,EAAEA,IAAK;MACXU,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,IAAI;QAAEC,UAAU,EAAE,IAAI;QAAEJ,KAAK,EAAE;MAAG,CAAC,EAC5C;QAAEG,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE,MAAM;QAAEJ,KAAK,EAAE;MAAI,CAAC,EACjD;QAAEG,KAAK,EAAE,WAAW;QAAEC,UAAU,EAAE,WAAW;QAAEJ,KAAK,EAAE;MAAI,CAAC,EAC3D;QAAEG,KAAK,EAAE,UAAU;QAAEC,UAAU,EAAE,UAAU;QAAEJ,KAAK,EAAE;MAAI,CAAC,CACzD;MACFK,iBAAiB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA5CuBb,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}