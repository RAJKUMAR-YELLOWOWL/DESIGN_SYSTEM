{"ast":null,"code":"// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import MenuItem from '@mui/material/MenuItem';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { CircularProgress } from '@mui/material'; // Import CircularProgress for loader\n// import { rows } from './MockData';\n// import Axios from 'axios';\n\n// type Row = {\n//   id: number;\n//   shop: string;\n//   inventory: string;\n//   product: string;\n// };\n\n// export default function ShopsPage() {\n\n//   const postShops = async () => {\n//     try{\n//       const response = await Axios.post('http://localhost:3000/addshop',{\n//         shopId: '12345678',\n//         shopName: 'shopName',\n//         shopLocation: 'udumalpet'\n//       });\n\n//       console.log('Response : ', response.data)\n//     }\n//     catch(error){\n//       console.error('Error : ', error)\n//     }\n//   }\n\n//   const [searchText, setSearchText] = React.useState('');\n//   const [shopFilter, setShopFilter] = React.useState('');\n//   const [inventoryFilter, setInventoryFilter] = React.useState('');\n//   const [loading, setLoading] = React.useState(false); \n\n//   const shops = [...new Set((rows as Row[]).map(row => row.shop))];\n//   const inventories = [...new Set((rows as Row[]).map(row => row.inventory))];\n\n//   const handleSearch = (value: string) => {\n//     setSearchText(value);\n//     setLoading(true); \n//     setTimeout(() => {\n//       setLoading(false); \n//     }, 1000);\n//   };\n\n//   const filteredRows = React.useMemo(() => {\n//     return rows.filter(row => {\n//       const shopMatch = shopFilter === '' || row.shop.toLowerCase().includes(shopFilter.toLowerCase());\n//       const inventoryMatch = inventoryFilter === '' || row.inventory.toLowerCase().includes(inventoryFilter.toLowerCase());\n//       const searchMatch = searchText === '' || Object.values(row).some(value => value.toString().toLowerCase().includes(searchText.toLowerCase()));\n//       return shopMatch && inventoryMatch && searchMatch;\n//     });\n//   }, [shopFilter, inventoryFilter, searchText]);\n\n//   return (\n//     <Box sx={{ height: '100%', width: '98%', padding: '20px' }}>\n//       <TextField\n//         label=\"Search\"\n//         value={searchText}\n//         onChange={(e) => handleSearch(e.target.value)}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n//         <TextField\n//           select\n//           label=\"Search for shops\"\n//           value={shopFilter}\n//           onChange={(e) => setShopFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {shops.map((shop, index) => (\n//             <MenuItem key={index} value={shop}>{shop}</MenuItem>\n//           ))}\n//         </TextField>\n//         <TextField\n//           select\n//           label=\"Search for inventory\"\n//           value={inventoryFilter}\n//           onChange={(e) => setInventoryFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {inventories.map((inventory, index) => (\n//             <MenuItem key={index} value={inventory}>{inventory}</MenuItem>\n//           ))}\n//         </TextField>\n//       </Box>\n//       {loading ? (\n//         <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 'calc(100% - 104px)' }}>\n//           <CircularProgress /> \n//         </Box>\n//       ) : (\n//         filteredRows.length === 0 ? (\n//           <p>Data not found</p>\n//         ) : (\n//           <Box sx={{ height: 'calc(100% - 104px)', width: '100%' }}>\n//             <DataGrid\n//               rows={filteredRows}\n//               columns={[\n//                 { field: 'id', headerName: 'ID', width: 90 },\n//                 { field: 'shop', headerName: 'Shop', width: 150 },\n//                 { field: 'inventory', headerName: 'Inventory', width: 150 },\n//                 { field: 'products', headerName: 'Products', width: 100 }\n//               ]}\n//               checkboxSelection\n//             />\n//           </Box>\n//         )\n//       )}\n//     </Box>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/raj/RAJ/SOFTWORTH/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx"],"sourcesContent":["// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import MenuItem from '@mui/material/MenuItem';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { CircularProgress } from '@mui/material'; // Import CircularProgress for loader\n// import { rows } from './MockData';\n// import Axios from 'axios';\n\n// type Row = {\n//   id: number;\n//   shop: string;\n//   inventory: string;\n//   product: string;\n// };\n\n// export default function ShopsPage() {\n\n//   const postShops = async () => {\n//     try{\n//       const response = await Axios.post('http://localhost:3000/addshop',{\n//         shopId: '12345678',\n//         shopName: 'shopName',\n//         shopLocation: 'udumalpet'\n//       });\n\n//       console.log('Response : ', response.data)\n//     }\n//     catch(error){\n//       console.error('Error : ', error)\n//     }\n//   }\n\n//   const [searchText, setSearchText] = React.useState('');\n//   const [shopFilter, setShopFilter] = React.useState('');\n//   const [inventoryFilter, setInventoryFilter] = React.useState('');\n//   const [loading, setLoading] = React.useState(false); \n\n//   const shops = [...new Set((rows as Row[]).map(row => row.shop))];\n//   const inventories = [...new Set((rows as Row[]).map(row => row.inventory))];\n\n//   const handleSearch = (value: string) => {\n//     setSearchText(value);\n//     setLoading(true); \n//     setTimeout(() => {\n//       setLoading(false); \n//     }, 1000);\n//   };\n\n//   const filteredRows = React.useMemo(() => {\n//     return rows.filter(row => {\n//       const shopMatch = shopFilter === '' || row.shop.toLowerCase().includes(shopFilter.toLowerCase());\n//       const inventoryMatch = inventoryFilter === '' || row.inventory.toLowerCase().includes(inventoryFilter.toLowerCase());\n//       const searchMatch = searchText === '' || Object.values(row).some(value => value.toString().toLowerCase().includes(searchText.toLowerCase()));\n//       return shopMatch && inventoryMatch && searchMatch;\n//     });\n//   }, [shopFilter, inventoryFilter, searchText]);\n\n//   return (\n//     <Box sx={{ height: '100%', width: '98%', padding: '20px' }}>\n//       <TextField\n//         label=\"Search\"\n//         value={searchText}\n//         onChange={(e) => handleSearch(e.target.value)}\n//         sx={{ marginBottom: '10px' }}\n//       />\n//       <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\n//         <TextField\n//           select\n//           label=\"Search for shops\"\n//           value={shopFilter}\n//           onChange={(e) => setShopFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {shops.map((shop, index) => (\n//             <MenuItem key={index} value={shop}>{shop}</MenuItem>\n//           ))}\n//         </TextField>\n//         <TextField\n//           select\n//           label=\"Search for inventory\"\n//           value={inventoryFilter}\n//           onChange={(e) => setInventoryFilter(e.target.value)}\n//           sx={{ width: '48%' }}\n//         >\n//           {inventories.map((inventory, index) => (\n//             <MenuItem key={index} value={inventory}>{inventory}</MenuItem>\n//           ))}\n//         </TextField>\n//       </Box>\n//       {loading ? (\n//         <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 'calc(100% - 104px)' }}>\n//           <CircularProgress /> \n//         </Box>\n//       ) : (\n//         filteredRows.length === 0 ? (\n//           <p>Data not found</p>\n//         ) : (\n//           <Box sx={{ height: 'calc(100% - 104px)', width: '100%' }}>\n//             <DataGrid\n//               rows={filteredRows}\n//               columns={[\n//                 { field: 'id', headerName: 'ID', width: 90 },\n//                 { field: 'shop', headerName: 'Shop', width: 150 },\n//                 { field: 'inventory', headerName: 'Inventory', width: 150 },\n//                 { field: 'products', headerName: 'Products', width: 100 }\n//               ]}\n//               checkboxSelection\n//             />\n//           </Box>\n//         )\n//       )}\n//     </Box>\n//   );\n// }\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}