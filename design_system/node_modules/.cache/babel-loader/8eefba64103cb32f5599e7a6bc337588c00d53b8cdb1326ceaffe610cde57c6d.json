{"ast":null,"code":"var _jsxFileName = \"/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx\";\n// import React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { rows } from './MockData';\n\n// export default function PresentationLayer() {\n\n//   const handleSearch = () => {\n//     const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n//     const shopResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//             typeof value === 'string' && value.toLowerCase().includes(shopSearch)));\n\n//     const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n//     const inventoryResults = rows.filter(row => \n//         Object.values(row).some(value =>\n//             typeof value === 'string' && value.toLowerCase().includes(inventorySearch)));\n\n//     if(shopResults.length > 0 && inventoryResults.length > 0)\n//     {\n//         console.log('successfull')\n//     }\n//     else\n//     {\n//         console.log('not found')\n//     }\n//   }\n\n//   return (\n//     <Box sx={{ padding: '20px' }}>\n\n//       <Box sx={{ display: 'flex', padding: '10px' }}>\n//         <TextField\n//           id = \"searchShop\"\n//           label=\"Search for shop\"\n//           fullWidth\n//         ></TextField>\n//         <TextField\n//           id = \"searchInventory\"\n//           label=\"Select for inventory\"\n//           fullWidth\n//           sx={{ marginLeft: '10px' }}\n//         >\n//         </TextField>\n//       </Box>\n\n//       <Box sx = {{display:'flex', justifyContent:'center', marginTop:'30px'}}>\n//         <button onClick={handleSearch} style = {{padding:'10px 20px',borderRadius:'7px'}}>Search</button>\n//       </Box>\n\n//       <Box sx = {{marginTop:'30px'}}>\n//         <DataGrid\n//             rows = {rows}\n//             columns = {[\n//                 {field:'id', headerName:'ID', width: 500},\n//                 {field:'shop', headerName:'Shop', width: 500},\n//                 {field:'inventory', headerName:'Inventory', width: 500},\n//                 {field:'products', headerName:'Products', width:500}\n//             ]}\n//             checkboxSelection\n//         ></DataGrid>\n//       </Box>\n\n//     </Box>\n//   );\n// }\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PresentationLayer() {\n  let searchSuccess = false;\n  const handleSearch = () => {\n    const shopSearch = document.getElementById('searchShop').value.toLowerCase();\n    const shopResults = rows.filter(row => Object.values(row).some(value => typeof value === 'string' && value.toLowerCase().includes(shopSearch)));\n    const inventorySearch = document.getElementById('searchInventory').value.toLowerCase();\n    const inventoryResults = rows.filter(row => Object.values(row).some(value => typeof value === 'string' && value.toLowerCase().includes(inventorySearch)));\n    if (shopResults.length > 0 && inventoryResults.length > 0) {\n      searchSuccess = true;\n    } else {\n      searchSuccess = false;\n    }\n\n    // Force re-render\n    window.dispatchEvent(new Event('resize'));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchShop\",\n        label: \"Search for shop\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"searchInventory\",\n        label: \"Select for inventory\",\n        fullWidth: true,\n        sx: {\n          marginLeft: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        style: {\n          padding: '10px 20px',\n          borderRadius: '7px'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '10px',\n        textAlign: 'center'\n      },\n      children: [searchSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Successful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }, this), !searchSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: [{\n          field: 'id',\n          headerName: 'ID',\n          width: 500\n        }, {\n          field: 'shop',\n          headerName: 'Shop',\n          width: 500\n        }, {\n          field: 'inventory',\n          headerName: 'Inventory',\n          width: 500\n        }, {\n          field: 'products',\n          headerName: 'Products',\n          width: 500\n        }],\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_c = PresentationLayer;\nvar _c;\n$RefreshReg$(_c, \"PresentationLayer\");","map":{"version":3,"names":["React","Box","TextField","DataGrid","rows","jsxDEV","_jsxDEV","PresentationLayer","searchSuccess","handleSearch","shopSearch","document","getElementById","value","toLowerCase","shopResults","filter","row","Object","values","some","includes","inventorySearch","inventoryResults","length","window","dispatchEvent","Event","sx","padding","children","display","id","label","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","justifyContent","marginTop","onClick","style","borderRadius","textAlign","columns","field","headerName","width","checkboxSelection","_c","$RefreshReg$"],"sources":["/home/raj/RAJ/SOFTWORTH/INTERN WORK/DESIGN_SYSTEM/DESIGN_SYSTEM/design_system/src/Components/ShopsPage.tsx"],"sourcesContent":["// import React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { DataGrid } from '@mui/x-data-grid';\n// import { rows } from './MockData';\n\n// export default function PresentationLayer() {\n\n//   const handleSearch = () => {\n//     const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n//     const shopResults = rows.filter(row =>\n//         Object.values(row).some(value =>\n//             typeof value === 'string' && value.toLowerCase().includes(shopSearch)));\n    \n\n//     const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n//     const inventoryResults = rows.filter(row => \n//         Object.values(row).some(value =>\n//             typeof value === 'string' && value.toLowerCase().includes(inventorySearch)));\n    \n//     if(shopResults.length > 0 && inventoryResults.length > 0)\n//     {\n//         console.log('successfull')\n//     }\n//     else\n//     {\n//         console.log('not found')\n//     }\n//   }\n\n//   return (\n//     <Box sx={{ padding: '20px' }}>\n      \n//       <Box sx={{ display: 'flex', padding: '10px' }}>\n//         <TextField\n//           id = \"searchShop\"\n//           label=\"Search for shop\"\n//           fullWidth\n//         ></TextField>\n//         <TextField\n//           id = \"searchInventory\"\n//           label=\"Select for inventory\"\n//           fullWidth\n//           sx={{ marginLeft: '10px' }}\n//         >\n//         </TextField>\n//       </Box>\n      \n//       <Box sx = {{display:'flex', justifyContent:'center', marginTop:'30px'}}>\n//         <button onClick={handleSearch} style = {{padding:'10px 20px',borderRadius:'7px'}}>Search</button>\n//       </Box>\n\n//       <Box sx = {{marginTop:'30px'}}>\n//         <DataGrid\n//             rows = {rows}\n//             columns = {[\n//                 {field:'id', headerName:'ID', width: 500},\n//                 {field:'shop', headerName:'Shop', width: 500},\n//                 {field:'inventory', headerName:'Inventory', width: 500},\n//                 {field:'products', headerName:'Products', width:500}\n//             ]}\n//             checkboxSelection\n//         ></DataGrid>\n//       </Box>\n\n//     </Box>\n//   );\n// }\n\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { rows } from './MockData';\n\nexport default function PresentationLayer() {\n  let searchSuccess = false;\n\n  const handleSearch = () => {\n    const shopSearch = (document.getElementById('searchShop') as HTMLInputElement).value.toLowerCase();\n    const shopResults = rows.filter(row =>\n      Object.values(row).some(value =>\n        typeof value === 'string' && value.toLowerCase().includes(shopSearch)\n      )\n    );\n\n    const inventorySearch = (document.getElementById('searchInventory') as HTMLInputElement).value.toLowerCase();\n    const inventoryResults = rows.filter(row =>\n      Object.values(row).some(value =>\n        typeof value === 'string' && value.toLowerCase().includes(inventorySearch)\n      )\n    );\n\n    if (shopResults.length > 0 && inventoryResults.length > 0) {\n      searchSuccess = true;\n    } else {\n      searchSuccess = false;\n    }\n\n    // Force re-render\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  return (\n    <Box sx={{ padding: '20px' }}>\n      <Box sx={{ display: 'flex', padding: '10px' }}>\n        <TextField\n          id=\"searchShop\"\n          label=\"Search for shop\"\n          fullWidth\n        ></TextField>\n        <TextField\n          id=\"searchInventory\"\n          label=\"Select for inventory\"\n          fullWidth\n          sx={{ marginLeft: '10px' }}\n        ></TextField>\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>\n        <button onClick={handleSearch} style={{ padding: '10px 20px', borderRadius: '7px' }}>Search</button>\n      </Box>\n\n      <Box sx={{ marginTop: '10px', textAlign: 'center' }}>\n        {searchSuccess && <p>Successful</p>}\n        {!searchSuccess && <p>Not found</p>}\n      </Box>\n\n      <Box sx={{ marginTop: '30px' }}>\n        <DataGrid\n          rows={rows}\n          columns={[\n            { field: 'id', headerName: 'ID', width: 500 },\n            { field: 'shop', headerName: 'Shop', width: 500 },\n            { field: 'inventory', headerName: 'Inventory', width: 500 },\n            { field: 'products', headerName: 'Products', width: 500 }\n          ]}\n          checkboxSelection\n        ></DataGrid>\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}